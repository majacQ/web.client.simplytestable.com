        {% if test_cancelled_queued_website is defined and test_cancelled_queued_website != '' %}
        <div class="alert alert-info for:input-website">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <strong>Your test of {{ test_cancelled_queued_website }} has 
            been cancelled</strong>.<br>We can't show you
            and results as we're in a <strong>read-only</strong> state whilst some 
            <strong>maintenance</strong> is going on and your test was never
            started.
        </div>               
        {% endif %} 

<section>
<div id="input" class="leader">                  
    <form method="post" action="{{ test_input_action_url }}">                
        <h1 class="info">
            <label for="input-website">
                {% if test is defined %}
                    {% if test.state == 'new'  %}
                    <i class="icon-cog"></i> Testing
                    {% elseif test.state == 'queued'  %}
                    <i class="icon-cog"></i> Testing 
                    {% elseif test.state == 'preparing' or test.state == 'in-progress' %}
                    <i class="icon-cog"></i> Testing
                    {% elseif test.state == 'completed' or test.state == 'cancelled' or test.state == 'failed-no-sitemap' %}
                    <i class="icon-bar-chart"></i> Results for 
                    {% endif %} 
                    {{ website }} <span id="test-id">(#{{ test.testId }})</span>
                {% else %}
                    {% if app.request.attributes.get('_route') == 'app_queued' %}
                        <i class="icon-cog"></i> Testing 
                    {% else %}                
                        <i class="icon-play-circle"></i> Start new website test
                    {% endif %}                                        
                {% endif %}               
            </label>
        </h1>           
            
        {% if test_start_error is defined and test_start_error != '' %}
            {% if test_start_error == 'website-blank' %}
        <div class="alert alert-error for:input-website">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <strong>Slow down!</strong> You're going to have to enter a website URL if we're going to get anything done here.
        </div>            
            {% endif %}            
            
            {% if test_start_error == 'website-blocked' %}
        <div class="alert alert-error for:input-website">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <p><strong>Ouch!</strong></p>
            <p><strong>{{ website }}</strong>  is too large for me to test just yet. I'm still new. Do you have a website you made that you'd like to test?</p>
        </div>            
            {% endif %}
            
            {% if test_start_error == 'no-test-types-selected' %}
            {% if 'js-static-analysis' in available_task_types|keys %}
        <div class="alert alert-error for:input-website">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <p><strong>Slow down!</strong></p>
            <p>
                You'll need to choose something to test. Tick <strong>HTML validation</strong>,
                <strong>CSS validation</strong> or <strong>JavaScript static analysis</strong>
                as required.
            </p>            
        </div>             
            {% else %}
        <div class="alert alert-error for:input-website">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <p><strong>Slow down!</strong></p>
            <p>
                You'll need to choose something to test. Tick <strong>HTML validation</strong>
                or <strong>CSS validation</strong> as required.
            </p>            
        </div>            
            {% endif %}
            
            
            {% endif %}            
        {% endif %}          

        <div class="fields input-prepend input-append larger">                    
            <input name="website" id="input-website" type="text" placeholder="Enter website URL &hellip;" {% if app.request.attributes.get('_route') == 'app_queued' %}disabled{% endif %} {% if test is defined %} {% if test.state != 'completed' and test.state != 'cancelled' and test.state != 'failed-no-sitemap' %} disabled {% endif %} {% endif %} {% if website is defined %} value="{{ website }}" {% endif %}>            
            {% if test is defined %}
                {% if test.state == 'completed' or test.state == 'cancelled' %}
            <button type="submit" class="btn btn-primary btn-large" name="full-single" value="full">Test full site</button>
            <button type="submit" class="btn btn-large" name="full-single" value="single">Test this URL only</button>
                {% elseif test.state == 'failed-no-sitemap' %}
            <button type="submit" class="btn btn-primary btn-large" name="full-single" value="full">Test full site</button>
            <button type="submit" class="btn btn-large" name="full-single" value="single">Test this URL only</button>
                {% else %}
                <button type="submit" class="btn btn-primary btn-large btn-danger">Cancel test <i class="icon-warning-sign icon-large"></i></button>
                {% endif %}            
            {% else %}
                {% if app.request.attributes.get('_route') == 'app_queued' %}
                    <button type="submit" class="btn btn-primary btn-large btn-danger">Cancel test <i class="icon-warning-sign icon-large"></i></button>
                {% else %}
            <button type="submit" class="btn btn-primary btn-large" name="full-single" value="full">Test full site</button>
            <button type="submit" class="btn btn-large" name="full-single" value="single">Test this URL only</button>
            <i class="icon-play icon-large"></i>                    
                {% endif %}
            {% endif %}
        </div>           
            
        {% if app.request.attributes.get('_route') == 'app' %}
        {% include 'SimplyTestableWebClientBundle:Partials:test-input-task-type-options.html.twig' %} 
        {% elseif app.request.attributes.get('_route') == 'app_progress' or app.request.attributes.get('_route') == 'app_queued' %}          
            
        <div id="test-options">
            <p class="expandable-control{% if remote_test_summary.task_type_options|length == 0 %}-disabled{% endif %} for-test-options-expandable expandable-control-default-closed">
                Checking                 
                {% for task_type in task_types %}
                    <span class="test-type">{{ task_type }}</span>{% if loop.length > 1 %}{% if loop.index == loop.length - 1 %} and {% else %}{% if loop.index != loop.length %},{% endif %}{% endif %}{% endif %}
                {% endfor %}
            </p>
            <div id="test-options-expandable">
                {% for task_type,task_type_options in remote_test_summary.task_type_options %}                    
                    <div class="test-options-advanced">
                        <div class="title">Selected <span class="test-type">{{ task_type }}</span> options:</div>                                        
                    
                        <ul>
                            {% if ((task_type_options['ignore-warnings'] is defined) and (task_type_options['ignore-warnings'] == 1)) %}
                                <li>
                                    <strong>Warnings</strong> are being <strong>ignored</strong>
                                </li>
                            {% endif %}
                            {% if ((task_type_options['vendor-extensions'] is defined) and (task_type_options['vendor-extensions'] == 'ignore')) %}
                                <li>
                                    <strong>Vendor extension messages</strong> are being <strong>ignored</strong>
                                </li>
                            {% endif %}                            
                            {% if ((task_type_options['vendor-extensions'] is defined) and (task_type_options['vendor-extensions'] == 'error')) %}
                                <li>                                
                                    <strong>Vendor extension issues</strong> are being treated as <strong>errors</strong>
                                </li>
                            {% endif %}                             
                            {% if ((task_type_options['vendor-extensions'] is defined) and (task_type_options['vendor-extensions'] == 'warn')) %}
                                <li>                                
                                    <strong>Vendor extension issues</strong> are being treated as <strong>warnings</strong>
                                    {% if ((task_type_options['ignore-warnings'] is defined) and (task_type_options['ignore-warnings'] == 1)) %}
                                    and subsequently <strong>ignored</strong>
                                    {% endif %}
                                </li>
                            {% endif %}                               
                            {% if ((task_type_options['ignore-common-cdns'] is defined) and (task_type_options['ignore-common-cdns'] == 1)) %}
                                <li>
                                    {% if task_type == 'CSS validation' %}
                                        CSS
                                    {% elseif task_type == 'JS static analysis' %}
                                        JavaScript
                                    {% else %}
                                        Content
                                    {% endif %}                                    
                                    served from <strong>common CDN domains</strong> is being <strong>ignored</strong>
                                </li>
                            {% endif %}
                            {% if ((task_type_options['domains-to-ignore'] is defined) and (task_type_options['domains-to-ignore']|length > 0) and (task_type_options['domains-to-ignore'][0] != '')) %}
                                <li>
                                    {% if task_type == 'CSS validation' %}
                                        CSS
                                    {% elseif task_type == 'JS static analysis' %}
                                        JavaScript
                                    {% else %}
                                        Content
                                    {% endif %}                                    
                                    served from <strong>these chosen domains</strong> is being ignored:
                                    {% for domain in task_type_options['domains-to-ignore'] %}
                                    <strong>{{domain}}</strong>{% if ((loop.index == loop.length - 1) and loop.length > 1) %} and {% endif %}{% if ((loop.index != loop.length - 1) and (not loop.last)) %}, {% endif %}
                                    {% endfor %}
                                </li>
                            {% endif %}                            
                        </ul>
                    </div>
                    
                {% endfor %}                
            </div>
        </div>
        {% elseif app.request.attributes.get('_route') == 'app_results' %}
        {% include 'SimplyTestableWebClientBundle:Partials:test-input-task-type-options.html.twig' %}             
        {% endif %}
            
    </form>
</div>
</section>